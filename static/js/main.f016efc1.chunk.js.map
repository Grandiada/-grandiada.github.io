{"version":3,"sources":["logo.svg","Quest.js","App.js","reportWebVitals.js","index.js"],"names":["Quest","props","question","initialValues","answer","onSubmit","values","a","Number","parseInt","correctCallback","alert","id","name","placeholder","type","App","useState","questionNumber","setNumber","quest","className","src","logo","alt","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,MAA0B,iC,+CCgC1BA,MA9Bf,SAAeC,GACX,OACI,gCACaA,EAAMC,SACf,cAAC,IAAD,CACIC,cAAe,CACXC,OAAQ,IAEZC,SAAQ,uCAAE,WAAOC,GAAP,SAAAC,EAAA,sDACFN,EAAMG,SAAWI,OAAOC,SAASH,EAAOF,SACxCH,EAAMS,kBACNC,MAAM,kEAGVA,MAAM,wEANA,2CAAF,sDAJZ,SAaI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,GAAG,SACHC,KAAK,SACLC,YAAY,WAEhB,wBAAQC,KAAK,SAAb,6BCyELC,MA7Ff,WAAgB,IAAD,EACqBC,mBAAS,GAD9B,mBACRC,EADQ,KACQC,EADR,KAGPjB,EAAW,CACf,CACEkB,MAAM,qaAINhB,OAAQ,GAEV,CACEgB,MAAM,4dAINhB,OAAQ,GACP,CACDgB,MAAM,mkBAMNhB,OAAQ,MAER,CACAgB,MAAM,kSAENhB,OAAQ,IAER,CACAgB,MAAM,4jBAINhB,OAAQ,GAER,CACAgB,MAAM,qdAINhB,OAAQ,GAER,CACAgB,MAAM,0JACNhB,OAAQ,IAER,CACAgB,MAAM,uaAINhB,OAAQ,GAER,CACAgB,MAAM,udAINhB,OAAQ,MAER,CACAgB,MAAM,s0BAQNhB,OAAQ,MAGZ,OACE,qBAAKiB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,mPAGCN,EAAehB,EAASuB,OACzB,cAAC,EAAD,CAAOrB,OAAQF,EAASgB,GAAgBd,OAAQF,SAAUA,EAASgB,GAAgBE,MAAOV,gBAAiB,WAAQS,EAAUD,EAAe,MAC5I,8BC7EOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f016efc1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Formik, Field, Form } from 'formik';\r\n\r\nfunction Quest(props) {\r\n    return (\r\n        <div>\r\n                    {props.question}\r\n            <Formik\r\n                initialValues={{\r\n                    answer: '',\r\n                }}\r\n                onSubmit={async (values) => {\r\n                    if (props.answer === Number.parseInt(values.answer)){\r\n                        props.correctCallback();\r\n                        alert('Поздравляю!')\r\n                    }\r\n                        else\r\n                    alert('Не правильно(')\r\n                }}\r\n            >\r\n                <Form>\r\n                    <Field\r\n                        id=\"answer\"\r\n                        name=\"answer\"\r\n                        placeholder=\"Answer\"\r\n                    />\r\n                    <button type=\"submit\">Answer</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quest;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport Quest from './Quest';\n\nfunction App() {\n  let [questionNumber, setNumber] = useState(0);\n\n  const question = [\n    {\n      quest: `Я несу в себе водицу,\n      Нам водица пригодится.\n      Нам купаться без хлопот,\n      Если есть?..`,\n      answer: 4,\n    },\n    {\n      quest: `Я из дома на порог\n      Лишь один шагнул шажок -\n      Дверь закрылась за спиной,\n      Нет пути передо мной.`,\n      answer: 5,\n    }, {\n      quest: `Кто по проводам\n      В дом приходит к нам?\n      К дальним селам, городам\n      Кто идёт по проводам?\n      Светлое величество!\n      Это..?`,\n      answer: 2001,\n    }\n    , {\n      quest: `За белой дверцей - стужа, лёд,\n      Там Дед Мороз, друзья, живёт.`,\n      answer: 20,\n    }\n    , {\n      quest: `Влез на стол он из-под лавки,\n      Осмотрелся на подставке,\n      Гибким хвостиком вильнул,\n      Складки с галстука слизнул.`,\n      answer: 3,\n    }\n    , {\n      quest: `Ходит-бродит по коврам,\n      Водит носом по углам.\n      Где прошел - там пыли нет,\n      Пыль и сор - его обед.`,\n      answer: 8,\n    }\n    , {\n      quest: `Верчусь весь век, а не человек.`,\n      answer: 30,\n    }\n    , {\n      quest: `Капризные сандалии\n      Однажды мне сказали: -\n      Боимся мы щекотки\n      Сапожной строгой..?`,\n      answer: 3,\n    }\n    , {\n      quest: `По ночам во мне Ванятка\n      До того задремлет сладко,\n      Что не хочется вставать.\n      Что за штука я?..`,\n      answer: 1996,\n    }\n    , {\n      quest: `Когда лежу на месте,\n      Не раскрывая рта,\n      Во мне, скажу но чести,\n      Такая пустота!\n      Скорей, скорей бы лето\n      ! И люди будут класть\n      Дорожные предметы\n      В мою большую пасть.`,\n      answer: 777,\n    }\n  ]\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Отгадай загадки, чтобы получить подарки)\n        </p>\n        {questionNumber<question.length?  \n        <Quest answer={question[questionNumber].answer} question={question[questionNumber].quest} correctCallback={() => { setNumber(questionNumber+1) }} />:\n        <div>\n          \n          </div>}\n      \n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}